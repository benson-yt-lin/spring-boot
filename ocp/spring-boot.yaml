apiVersion: v1
kind: DeploymentConfig
metadata:
  labels:
    app: spring-boot
  name: spring-boot
spec:
  replicas: 1
  selector:
    deploymentConfig: spring-boot
  strategy:
    type: Rolling
    rollingParams:
      updatePeriodSeconds: 1
      intervalSeconds: 1
      timeoutSeconds: 600
      maxSurge: "100%" 
      maxUnavailable: "0%"
  template:
    metadata:
      labels:
        app: spring-boot
      name: spring-boot
    spec:
      containers:
      - env:
          - name: TZ
            value: Asia/Taipei
          - name: LANG
            value: en_US.UTF-8
          - name: PROFILE
            value: ${PROFILE}
          - name: SERVER_PORT
            value: ${SERVER_PORT}
          - name: REDIS_IP
            value: ${REDIS_IP}
          - name: REDIS_PORT
            value: ${REDIS_PORT}
          - name: REDIS_PASSWORD
            value: ${REDIS_PASSWORD}
          - name: JAVA_OPTIONS
            value: ${JAVA_OPTIONS}
          - name: GC_MAX_METASPACE_SIZE
            value: ${GC_MAX_META_SIZE}
          - name: JAVA_MAX_MEM_RATIO
            value: ${JAVA_MAX_MEM_RATIO}
          - name: JAVA_TOOL_OPTIONS
            value: ${JAVA_TOOL_OPTIONS}
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: NAME_SPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
        image: spring-boot
        imagePullPolicy: Always
        name: spring-boot
        ports:
        - containerPort: 8778
          name: jolokia
          protocol: TCP
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 8443
          name: https
          protocol: TCP
        - containerPort: 6379
          name: redis
          protocol: TCP
        livenessProbe:
          tcpSocket:
            port: 8080
          initialDelaySeconds: 30
          timeoutSeconds: 1
        readinessProbe:
          httpGet:
            path: acuator/health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 60
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 1
        resources:
          limits:
            memory: 512Mi
            cpu: 1
          requests:
            memory: 512Mi
            cpu: 1
        volumeMounts:
        - mountPath: /data
          name: data
        - mountPath: /config/
          name: config
        - mountPath: /config/logback/
          name: config-logback
      volumes:
        - name: data
          emptyDir: {}
        - name: config
          emptyDir: {}
        - name: config-logback
          emptyDir: {}

        # - name: config
        #   configMap:
        #     name: application-sit
        #     items:
        #     - key: application-sit
        #       path: application-sit.yml
        # - name: config-logback
        #   configMap:
        #     name: app-logback
        #     items:
        #     - key: logback-spring
        #       path: logback-spring.xml
      terminationGracePeriodSeconds: 60
  triggers:
  - imageChangeParams:
      automatic: true
      containerNames:
      - spring-boot
      from:
        kind: ImageStreamTag
        name: spring-boot:latest
    type: ImageChange
  - type: ConfigChange
---
apiVersion: v1
kind: ImageStream
metadata:
  name: spring-boot
  labels:
    app: spring-boot
spec:
  dockerImageRepositoy: harbor.bot.com.tw/linuxone/camel/spring-boot
  lookupPolicy:
    local: false
  tags:
  - annotations: null
    from:
      kind: DockerImage
      name: harbor.bot.com.tw/linuxone/camel/spring-boot:latest
    importPolicy:
      scheduled: true
    name: latest
    referencePolicy:
      type: Source

---

apiVersion: v1
kind: BuildConfig
metadata:
  labels:
    app: spring-boot
  name: spring-boot
spec:
  successfulBuildsHistoryLimit: 5
  failedBuildsHistoryLimit: 1
  resources:
    limits:
      cpu: "600m"
      memory: "512Mi"
  output:
    to:
      kind: DockerImage
      name: harbor.bot.com.tw/linuxone/camel/spring-boot:latest
    ## BINARY BUILD
  runPolicy: Serial
  source:
    git:
      uri: https://github.com/benson-yt-lin/spring-boot
    type: Git
  strategy:
    sourceStrategy:
      from:
        kind: ImageStreamTag
        name: openjdk-11:1.10-1
        namespace: camel
      type: Source
      env:
      - name: "BUILD_LOGLEVEL"
        value: "3"
      forcePull: true
  triggers: []
    # - imageChange: {}
    #   type: ImageChange

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    description: The application's http port.
  labels:
    app: spring-boot
  name: spring-boot
spec:
  ports:
  - port: 8080
    targetPort: 8080
  selector:
    deploymentConfig: spring-boot

---

apiVersion: v1
name: spring-boot
kind: Route
metadata:
  annotations:
    description: Route for application's http service.
  labels:
    app: spring-boot
  name: spring-boot
spec:
  host: 
  to:
    name: spring-boot
